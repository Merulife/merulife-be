name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Change this to your deployment branch if necessary

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-south-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to AWS ECR. The action automatically picks up AWS credentials from environment variables.
      - name: Login to AWS ECR
        id: ecr_login
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: private

      # Build the Docker image
      - name: Build Docker Image
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

      # Push the Docker image to ECR
      - name: Push Docker Image to ECR
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          docker push $ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    needs: build_and_push
    runs-on: [self-hosted, linux, ec2-runner]  # Use the labels matching your self-hosted runner
    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            IMAGE_TAG=${GITHUB_SHA::7}
            # Stop and remove the existing container (if it exists)
            docker stop myapp || true
            docker rm myapp || true
            # Log in to ECR
            aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URL }}
            # Pull the new image from ECR
            docker pull ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
            # Run the container with the DATABASE_URL secret (masked in logs)
            docker run -d --name myapp -p 3000:3000 \
              -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
              ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
